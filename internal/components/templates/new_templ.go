// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.687
package Templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/portanic/portanic/internal/components/layout"

func New() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h1>Create New Template</h1><form action=\"/templates\" method=\"post\" id=\"templateForm\"><div><label for=\"name\">Template Name:</label> <input type=\"text\" id=\"name\" name=\"name\" required><br></div><div id=\"dynamicFields\"><!-- Dynamic fields will be added here --></div><button type=\"button\" onclick=\"addCustomField()\">Add Custom Field</button><br><br><button type=\"submit\">Submit</button></form><script>\n  // Function to add a new custom field\n  function addCustomField() {\n    const container = document.getElementById('dynamicFields');\n    const index = container.children.length + 1;  // Calculate the next index\n    const fieldHTML = `\n        <div class=\"custom-field\">\n            <label for=\"fieldName${index}\">Field Name:</label>\n            <input type=\"text\" id=\"fieldName${index}\" name=\"fieldName${index}\" required />\n            <label for=\"fieldType${index}\">Field Type:</label>\n            <select id=\"fieldType${index}\" name=\"fieldType${index}\" required>\n                <option value=\"string\">String</option>\n                <option value=\"number\">Number</option>\n                <option value=\"date\">Date</option>\n                <option value=\"boolean\">Boolean</option>\n            </select>\n            <button type=\"button\" onclick=\"removeField(this)\">Remove</button>\n            <br />\n        </div>\n    `;\n    container.innerHTML += fieldHTML; // Append new field HTML\n  }\n\n  // Function to remove a custom field\n  function removeField(button) {\n    button.parentNode.remove(); // Remove the field's div container\n  }\n</script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = layout.Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
